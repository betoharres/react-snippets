#
#  React snippets
#

snippet im "import" b
import $1 from '${2}'
endsnippet

snippet constructor "React constructor" b
constructor () {
	super()
	this.state = {
		${1}: ${2:''},
	}
}$0
endsnippet

snippet cdm "component did mount" b
componentDidMount () {
	${1}
}$0
endsnippet

snippet cdu "component did update" b
componentDidUpdate (prevProps, prevState) {
	${1}
},$0
endsnippet

snippet cwm "component will mount" b
componentWillMount () {
	${1}
}$0
endsnippet

snippet cwr "component will receive props" b
componentWillReceiveProps (nextProps) {
	${1}
}$0
endsnippet

snippet cwun "component will unmount" b
componentWillUnmount () {
	${1}
}$0
endsnippet

snippet cwup "component will update" b
componentWillUpdate (nextProps, nextState) {
	${1}
}$0
endsnippet

snippet fup
forceUpdate(${1:callback})
endsnippet

snippet gdp "get default props" b
getDefaultProps () {
	return {
		${1}
	}
}$0
endsnippet

snippet gis "get initial state" b
getInitialState () {
	return {
		${1}: ${2}
	}
}$0
endsnippet

snippet ism "is mounted"
isMounted()
endsnippet

snippet jsx "define jsx dom" b
/**
 * @jsx React.DOM
 */
endsnippet

snippet pt "propTypes" b
${1}.propTypes = {
	${2}: PropTypes.${3:string}.isRequired,
}
endsnippet

snippet rcc "create class/component" b
${1:import React, {Component} from 'react'}
class ${2:ClassName} extends Component {

	render () {
		return (
			${3:<div></div>}
		)
	}
}
$0
export default $2
endsnippet

snippet rcsc "create stateless component" b
${3:import React, {PropTypes} from 'react'}
export default function ${1:ClassName} (${2:props}) {

	return (
		${4:<div>{'NewStatelessComponent'}</div>}
	)

}
endsnippet

snippet render
render () {
	return (
		${1:<div></div>}
	)
}$0
endsnippet

snippet tss "set state" b
this.setState({
	${1}: ${2}
})$0
endsnippet

snippet scu "should component update"
shouldComponentUpdate (nextProps, nextState) {
	${1}
}$0
endsnippet

snippet prp "get property" i
this.props.${1}
endsnippet

snippet st "get state" i
this.state.${1}
endsnippet

snippet trp
this.transferPropsTo(${VISUAL}$0)
endsnippet
